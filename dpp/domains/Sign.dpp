Lattice Sign = Top | Bot | Neg | Zero | Pos;

Order Sign(s1, s2) = (s1, s2) match {
    case (Bot, _) => true;
    case (Neg, Neg) => true;
    case (Zero, Zero) => true;
    case (Pos, Pos) => true;
    case (_, Top) => true;
    case _ => false;
}

Join Sign(s1, s2) = (s1, s2) match {
    case (s, Bot) => s;
    case (_, Bot) => s;
    case (Neg, Neg) => Neg;
    case (Zero, Zero) => Zero;
    case (Pos, Pos) => Pos;
    case _ => Top;
}

Function lift(i: Int) =
    if (i < 0)
        Neg
    else if (i > 0)
        Pos
    else
        Zero;

@Strict
Function sum(s1: Sign, s2: Sign) = (s1, s2) match {
    case (Bot, _) => Bot;
    case (_, Bot) => Bot;

    case (Neg, Neg) => Neg;
    case (Neg, Zero) => Neg;
    case (Neg, Pos) => Top;

    case (Zero, Neg) => Neg;
    case (Zero, Zero) => Zero;
    case (Zero, Pos) => Pos;

    case (Pos, Neg) => Top;
    case (Pos, Zero) => Pos;
    case (Pos, Pos) => Pos;

    case _ => Top;
}


